---
- name: search for an ami image
  ec2_ami_search:
    region={{ region|default('sa-east-1') }}
    store={{ store|default('ebs') }}
    virt={{ virt|default('hvm') }}
    distro={{ distro|default('ubuntu') }}
    release={{ release|default('trusty') }}
  register: ami_data

- name: debug ami image
  debug: 'msg="{{ ami_data }}"'

- name: start the ec2 instance
  local_action:
    module: ec2
    key_name: "{{ keypair|default('ansible') }}"
    group: "{{ securitygroup|default('default') }}"
    instance_type: "{{ instancetype|default('t2.micro')}}"
    image: "{{ ami_data.ami }}"
    region: "{{ region|default('sa-east-1a') }}"
    vpc_subnet_id: "{{ subnet_id }}"    
    wait: no
    volumes:

       - device_name: /dev/xvdf
         volume_type: io1
         iops: 1000
         volume_size: 100
         delete_on_termination: true

       - device_name: /dev/xvdg
         volume_type: io1
         iops: 250 
         volume_size: 25 
         delete_on_termination: true

       - device_name: /dev/xvdh
         volume_type: io1
         iops: 100 
         volume_size: 10
         delete_on_termination: true
         ebs_optimized: yes

    instance_tags:
        Name: "{{ name|default('ansible_generated')}}"
        foo: bar
  register: instance_data

- name: debug instance start
  debug: 'msg="{{instance_data, group }}"'

